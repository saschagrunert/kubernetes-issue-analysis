apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: kubernetes-analysis-
  annotations: {pipelines.kubeflow.org/pipeline_spec: '{"inputs": [{"default": "",
      "name": "pr", "optional": true, "type": "String"}, {"default": "", "name": "commit",
      "optional": true, "type": "String"}], "name": "Kubernetes Analysis"}'}
spec:
  entrypoint: kubernetes-analysis
  templates:
  - name: create-katib-pvc
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: '{{workflow.name}}-katib-pvc'
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: 1Gi
    outputs:
      parameters:
      - name: create-katib-pvc-manifest
        valueFrom: {jsonPath: '{}'}
      - name: create-katib-pvc-name
        valueFrom: {jsonPath: '{.metadata.name}'}
      - name: create-katib-pvc-size
        valueFrom: {jsonPath: '{.status.capacity.storage}'}
  - name: kubernetes-analysis
    dag:
      tasks:
      - {name: create-katib-pvc, template: create-katib-pvc}
      - name: tune-hyperparameters
        template: tune-hyperparameters
        dependencies: [create-katib-pvc]
        arguments:
          parameters:
          - {name: create-katib-pvc-name, value: '{{tasks.create-katib-pvc.outputs.parameters.create-katib-pvc-name}}'}
  - name: tune-hyperparameters
    container:
      args:
      - |+
        set -euo pipefail

        ls -lah /mnt
        kubectl get pods
        sleep 5

      command: [bash, -c]
      image: quay.io/saschagrunert/kubernetes-analysis:latest
      imagePullPolicy: Always
      volumeMounts:
      - {mountPath: /mnt, name: create-katib-pvc}
      - {mountPath: /out, name: output-artifacts}
      - {mountPath: /secrets/github, name: github-token, readOnly: true}
      - {mountPath: /secrets/quay, name: quay, readOnly: true}
      - {mountPath: /root/.ssh, name: ssh-key, readOnly: true}
      - {mountPath: /root/.kube, name: kubeconfig, readOnly: true}
    inputs:
      parameters:
      - {name: create-katib-pvc-name}
    outputs:
      artifacts:
      - {name: mlpipeline-ui-metadata, path: /out/mlpipeline-ui-metadata.json}
      - {name: mlpipeline-metrics, path: /out/mlpipeline-metrics.json}
    volumes:
    - name: create-katib-pvc
      persistentVolumeClaim: {claimName: '{{inputs.parameters.create-katib-pvc-name}}'}
    - name: github-token
      secret: {secretName: github-token}
    - name: kubeconfig
      secret: {defaultMode: 384, secretName: kubeconfig}
    - emptyDir: {}
      name: output-artifacts
    - name: quay
      secret: {secretName: quay}
    - name: ssh-key
      secret: {defaultMode: 384, secretName: ssh-key}
  arguments:
    parameters:
    - {name: pr, value: ''}
    - {name: commit, value: ''}
  serviceAccountName: pipeline-runner
